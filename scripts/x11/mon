#!/bin/bash
# This script is used to set the monitor configuration for X11.

command=$1

if [ "$command" == "help" ]; then
    echo "Usage: $0 <command>"
    echo "Commands:"
    echo "  la      - Show only laptop screen"
    echo "  hd      - Show HDMI only"
    echo "  cp      - mirror all screens"
    echo "  hl      - Show HDMI left of laptop screen"
    echo "  hr      - Show HDMI right of laptop screen"
    echo "  ce      - Center screen only"
    echo "  cl      - Center and left screen only no laptop screen"
    echo "  clm     - Center and left screen only no laptop screen + moonlight"
    echo "  <empty> - Default docking station or laptop only"
    exit 1
fi


# List available monitors using xrandr
monitors=$(xrandr --query | grep " connected" | awk '{ print $1 }')
echo "Available monitors: $monitors"
if [ "$PRODUCT_NAME" == "21MCCTO1WW" ] ; then
    echo "Lenovo T14 AMD detected, setting monitor configuration..."
    dock_left="DisplayPort-6"
    if echo "$monitors" | grep -q "DisplayPort-7"; then
        dock_center="DisplayPort-7"
    else
        dock_center="DisplayPort-8"
    fi
    laptop="eDP"
    laptop_mode="1920x1200"
    hdmi="HDMI-A-0"
    moonlight="HDMI-A-0"
elif [ "$PRODUCT_NAME" == "Dell G15 5520" ]; then
    echo "Dell G15 5520 detected, setting monitor configuration..."
    if echo "$monitors" | grep -q "DP-1-3"; then
        dock_left="DP-1-3"
    else
        dock_left="DP-1-1"
    fi
    dock_center="DP-1-2"
    laptop="eDP-1"
    laptop_mode="1920x1080"
    hdmi="HDMI-1-0"
    moonlight="HDMI-1-0"
else
    echo "Unknown product name: $PRODUCT_NAME, applying default on the first monitor found"
    first_monitor=$(echo "$monitors" | head -n1)
    laptop="$first_monitor"
    laptop_mode=$(xrandr | grep -A1 "^$laptop connected" | tail -n1 | awk '{print $1}')
    hdmi="HDMI_NOT_FOUND"
    dock_left="DOCK_LEFT_NOT_FOUND"
    dock_center="DOCK_CENTER_NOT_FOUND"
fi


echo "Available monitors:"
for monitor in $monitors; do
    echo "- $monitor"
done

echo "Using the following configuration:"
echo "Laptop: $laptop (mode: $laptop_mode)"
echo "HDMI: $hdmi"
echo "Dock Left: $dock_left"
echo "Dock Center: $dock_center"
echo "Moonlight screen: $moonlight"

# default behavior
default() {
    export command=$(cat ~/.sclayout)
    echo default layout is $command
    applylayout
}

lap() {

    echo "Laptop screen only."

    appendcommand=""

    for monitor in $monitors; do
        if [ "$monitor" != "$laptop" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done
    xrandr --output $laptop --auto --primary  \
        $appendcommand
}

hdmi(){
    echo "HDMI screen only"

    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$hdmi" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done

    xrandr --output $hdmi --auto --primary \
        $appendcommand
}

hdmileft(){
    echo "HDMI left of Laptop screen"

    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$hdmi" ] && [ "$monitor" != "$laptop" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done

    xrandr \
        --output $laptop --auto --pos 0x0 --primary \
        --output $hdmi --mode 1920x1080 --pos -1920x0 --rate 60 --rotate normal \
        $appendcommand
}

hdmiright(){
    echo "HDMI right of Laptop screen"

    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$hdmi" ] && [ "$monitor" != "$laptop" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done

    xrandr \
        --output $laptop --auto --pos 0x0 --primary \
        --output $hdmi --mode 1920x1080 --pos 1920x0 --rate 60 --rotate normal \
        $appendcommand
}

copyallscreens(){
    copy_mode=$(bestmode)
    
    if [ "$copy_mode" == "0" ]; then
        echo "No suitable copy mode found. Defaulting to laptop resolution."
        copy_mode="$laptop_mode 60"
    fi

    copy_resolution=$(echo "$copy_mode" | awk '{print $1}')
    copy_refresh_rate=$(echo "$copy_mode" | awk '{print $2}')

    echo "Resolution: $copy_resolution"
    echo "Refresh rate: $copy_refresh_rate"

    echo "HDMI & Laptop screen mirroring"

    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$laptop" ]; then
            appendcommand+=" --output $monitor --mode $copy_resolution --pos 0x0 --rate $copy_refresh_rate --rotate normal"
        fi
    done

    xrandr \
        --output $laptop --mode $copy_resolution --pos 0x0 --rate $copy_refresh_rate --rotate normal --primary \
        $appendcommand

}

centerdock(){
    echo "Center dock screen"
    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$dock_center" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done
    xrandr \
        --output $dock_center --auto --pos 0x0 --primary \
        $appendcommand

}

centerandleftdock(){
    echo "Center and left dock screen"
    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$dock_left" ] && [ "$monitor" != "$dock_center" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done
    xrandr \
        --output $dock_left   --mode 1920x1080      --pos 0x0       --rate 60   --rotate normal --primary \
        --output $dock_center --mode 1920x1080      --pos 1920x0    --rate 60   --rotate normal \
        $appendcommand

}

centerleftml(){
    echo "Center and left dock screen moonlight all left"
    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$dock_left" ] && [ "$monitor" != "$dock_center" ] && [ "$monitor" != "$moonlight" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done
    xrandr \
        --output $moonlight   --mode 1280x800       --pos 0x0       --rate 60   --rotate normal --primary \
        --output $dock_left   --mode 1920x1080      --pos 1280x0    --rate 60   --rotate normal \
        --output $dock_center --mode 1920x1080      --pos 3200x0    --rate 60   --rotate normal \
        $appendcommand

}

home() {

    appendcommand=""
    for monitor in $monitors; do
        if [ "$monitor" != "$dock_left" ] && [ "$monitor" != "$dock_center" ] && [ "$monitor" != "$laptop" ]; then
            appendcommand+=" --output $monitor --off"
        fi
    done

    xrandr \
        --output $dock_left   --mode 1920x1080      --pos 0x0       --rate 60   --rotate normal --primary \
        --output $dock_center --mode 1920x1080      --pos 1920x0    --rate 60   --rotate normal \
        --output $laptop      --mode $laptop_mode   --pos 3840x0    --rate 60   --rotate normal \
        $appendcommand

}


applylayout(){
if [ "$command" == "l" ]; then
    
    lap

elif [ "$command" == "hd" ] && echo "$monitors" | grep -q "$hdmi" ; then
    
    hdmi

elif [ "$command" == "cp" ]; then

    copyallscreens

elif [ "$command" == "hl" ] && echo "$monitors" | grep -q "$hdmi" ; then

    hdmileft

elif [ "$command" == "hr" ] && echo "$monitors" | grep -q "$hdmi" ; then

    hdmiright

elif [ "$command" == "ce" ] && echo "$monitors" | grep -q "$dock_center" ; then
    
    centerdock

elif [ "$command" == "cl" ] && echo "$monitors" | grep -q "$dock_left" && echo "$monitors" | grep -q "$dock_center"; then
    
    centerandleftdock

elif [ "$command" == "clm" ] && echo "$monitors" | grep -q "$dock_left" && echo "$monitors" | grep -q "$dock_center" && echo "$monitors" | grep -q "$moonlight"; then
    
    centerleftml

elif [ "$command" == "" ] && echo "$monitors" | grep -q "$dock_left" && echo "$monitors" | grep -q "$dock_center"  && echo "$monitors" | grep -q "$moonlight"; then
    echo "Docking station detected, setting up DisplayPort monitors."
    default
else
    echo "No specific command provided or no docking station detected. Defaulting to laptop screen only."
    lap
fi
}

applylayout