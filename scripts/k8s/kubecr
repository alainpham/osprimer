#!/bin/bash
# vmdl v8s
# vmcr v8s 16384 12 d12-kube 20 80G 1G debiantesting
# vmcr v8s 16384 12 d12-kmin 20 80G 1G debiantesting

# https://github.com/kubernetes/ingress-nginx/blob/main/deploy/static/provider/baremetal/deploy.yaml
export NGINX_INGRESS_VERSION=1.12.2
export NGINX_INGRESS_KUBE_WEBHOOK_CERTGEN_VERSION=v1.5.3


if [ ! -f "/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.pem" ]; then
sudo rm -rf /home/${USER}/apps/tls
mkdir -p /home/${USER}/apps/tls/cfg /home/${USER}/apps/tls/logs

docker run --rm --name certbot  -v "/home/${USER}/apps/tls/cfg:/etc/letsencrypt" -v "/home/${USER}/apps/tls/logs:/var/log/letsencrypt" infinityofspace/certbot_dns_duckdns:${CERTBOT_DUCKDNS_VERSION} \
   certonly \
     --non-interactive \
     --agree-tos \
     --email ${EMAIL} \
     --preferred-challenges dns \
     --authenticator dns-duckdns \
     --dns-duckdns-token ${DUCKDNS_TOKEN} \
     --dns-duckdns-propagation-seconds 45 \
     -d "*.${WILDCARD_DOMAIN}"
fi

sudo chown -R ${USER}:${USER} /home/${USER}/apps/tls/cfg
openssl pkcs12 -export -out /home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.p12  -in /home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/fullchain.pem -inkey  /home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.pem -passin pass:password -passout pass:password

if [ ! -f "/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.p12" ]; then
  echo "Error: privkey.p12 does not exist. Exiting."
  exit 1
fi

curl -sfL https://get.k3s.io | INSTALL_K3S_SKIP_ENABLE="true" INSTALL_K3S_SKIP_START="true" INSTALL_K3S_VERSION="${K3S_VERSION}" K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="server --disable=servicelb,traefik --tls-san ${WILDCARD_DOMAIN}" sh -

if command -v systemctl &> /dev/null; then
  sudo systemctl enable k3s
  sudo systemctl start k3s
else
  echo "Warning: systemd is not available. Please start k3s manually."
fi

if command -v openrc-run &> /dev/null || command -v openrc &> /dev/null; then
  sudo rc-update add k3s default
  sudo service k3s start
fi

mkdir -p $HOME/.kube ; cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config

python3 <<EOF
import yaml
import os

cfg_file = os.path.expanduser("~/.kube/config")
with open(cfg_file) as f:
    data = yaml.safe_load(f)

data['clusters'][0]['name'] = '$WILDCARD_DOMAIN'
data['contexts'][0]['context']['cluster'] = '$WILDCARD_DOMAIN'

with open(cfg_file, 'w') as f:
    yaml.dump(data, f, default_flow_style=False)
EOF
sudo cp $HOME/.kube/config /etc/rancher/k3s/k3s.yaml


kubectl create ns ingress-nginx
kubectl -n ingress-nginx create secret tls nginx-ingress-tls  --key="/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.pem"   --cert="/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/fullchain.pem"  --dry-run=client -o yaml | kubectl apply -f -

wget -O /tmp/ingress.yaml https://raw.githubusercontent.com/alainpham/debian-os-image/master/scripts/k8s/ingress-hostport-notoleration.yaml
envsubst < /tmp/ingress.yaml | kubectl -n ingress-nginx apply -f -
